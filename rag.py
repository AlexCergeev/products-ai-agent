import os
from langchain_core.documents import Document
from langchain.vectorstores import Qdrant
from langchain_gigachat.embeddings import GigaChatEmbeddings

credentials = os.environ.get("GIGACHAT_API_KEY")

texts = ['Техническое задание может содержать нечетко сформулированные требования, что приводит к неоднозначному пониманию задачи.',
 'В документе могут присутствовать противоречивые указания, из-за чего разные части задания конфликтуют между собой.',
 'Требования к функциональности могут быть описаны неполно или с пропущенными деталями, что затрудняет разработку и тестирование.',
 'Отсутствие конкретных критериев приёмки и измеримых метрик может привести к разночтениям в оценке качества конечного продукта.',
 'Используемая терминология может быть неунифицированной или неточно определённой, что создаёт риск неверной интерпретации требований.',
 'Документ может не включать описание ограничений, предположений и условий, в которых предполагается реализация системы.',
 'Недостаточное внимание к аспектам безопасности, производительности и масштабируемости может привести к появлению серьёзных технических проблем.',
 'Отсутствие подробного описания интерфейсов и взаимодействия между модулями затрудняет интеграцию различных компонентов системы.',
 'Техническое задание может не охватывать все сценарии использования, включая обработку исключительных ситуаций, что снижает надёжность системы.',
 'Проблемы с форматированием и структурированием документа могут затруднить быстрое понимание и поиск необходимой информации.']

big_texts = [
"Нелогичное требование – Требование сформулировано без внутренней логической связности (условия или действия противоречат здравому смыслу) – Решение: пересмотреть и исправить требование, чтобы устранить нелогичность и согласовать его с реальным поведением системы.",
"Циклическая зависимость требований – Два или более требования зависят друг от друга, образуя замкнутый цикл, что делает их невыполнимыми – Решение: удалить или переработать зависимые требования, разорвав цикл: явно определить порядок выполнения или объединить требования.",
"Нереалистичное требование – Требование, невыполнимое в рамках текущих технических возможностей, бюджета или сроков (например, 100% безотказность) – Решение: проверить реалистичность требования вместе с заказчиком и скорректировать его под достижимые показатели или предусмотреть дополнительные ресурсы.",
"Нарушение логической последовательности – Требования описывают процесс в неправильном или неполном порядке (например, ссылаются на шаг, который еще не выполнен) – Решение: уточнить последовательность действий в требованиях или разбить процесс на этапы, чтобы порядок был логичным и понятным.",
"Пропущенные условия или шаги – Требование описывает результат, но опускает необходимые условия или промежуточные этапы для его достижения – Решение: дополнить требование недостающими условиями и шагами, чтобы процесс выполнения был полностью определён.",
"Неправильная причинно-следственная связь – В требовании перепутаны причина и следствие или указано неверное условие для ожидаемого результата – Решение: переформулировать требование, корректно обозначив условие (причину) и соответствующее ему действие (следствие).",
"Конфликт с бизнес-целями – Требование не соответствует исходным бизнес-целям или потребностям (реализует функцию, не дающую ценности) – Решение: проверить требование на соответствие целям проекта и при необходимости изменить или исключить его.",
"Несоответствие ограничениям среды – Требование не учитывает ограничения платформы, окружения или технологий (например, требует функции, недоступной на целевой платформе) – Решение: привести требование в соответствие с реальными ограничениями среды или изменить ограничение после консультации с техническими экспертами.",
"Невыполнимое условие – Требование содержит условие, которое не может быть выполнено на практике (например, взаимоисключающие условия “и X, и не X”) – Решение: уточнить или удалить невыполнимое условие, чтобы требование стало реализуемым.",
"Неявные предположения – Требование основывается на предположениях, которые не указаны явно (например, что пользователь всегда обладает определенными правами) – Решение: задокументировать все предположения или убедиться в их справедливости, чтобы требование было однозначным и корректным.",
"Взаимоисключающие требования – Два или более требования напрямую противоречат друг другу, и выполнение одного исключает выполнение другого – Решение: выявить конфликтующие требования и устранить противоречие: уточнить формулировки или приоритизировать и исключить одно из требований.",
"Дублирование требований с разной формулировкой – Одно и то же требование непреднамеренно описано в документе по-разному, создавая впечатление двух разных требований и вызывая противоречие – Решение: объединить дублирующие формулировки в одно четкое требование, устранив расхождения между ними.",
"Несогласованность частей документа – Различные разделы спецификации (например, текст vs. таблица, разные главы) содержат конфликтующую информацию о системе – Решение: провести ревизию документа, согласовать данные во всех разделах и оставить единственно верную формулировку требования во всех местах.",
"Конфликт функциональных требований – Два функциональных требования описывают несовместимые функции или результаты (например, одно требует удалить данные, а другое – сохранить их) – Решение: обсудить конфликтующие функции с заказчиком и командой, чтобы либо изменить требования для совместимости, либо выбрать одну из взаимоисключающих функций.",
"Конфликт нефункциональных требований – Требования к качествам системы (например, безопасности и производительности) противоречат друг другу или функциональным целям (требование максимальной безопасности может замедлять систему, противореча требованию высокой скорости) – Решение: найти баланс или компромисс: скорректировать показатели требований совместно со специалистами, чтобы оба требования можно было выполнить.",
"Несоответствие числовых параметров – В разных местах документа приведены разные числовые значения для одного показателя (например, максимальное число пользователей указано то как 1000, то как 500) – Решение: определить правильное значение и обновить все упоминания этого параметра в требованиях, чтобы устранить противоречие.",
"Противоречие с внешними стандартами – Требование проекта противоречит внешнему нормативному требованию, стандарту или контрактному обязательству – Решение: пересмотреть требование и привести его в соответствие с внешними нормами; при необходимости согласовать изменения с заказчиком или юридической службой.",
"Расхождения в требованиях разных стейкхолдеров – Разные заинтересованные стороны выдвинули требования, которые конфликтуют друг с другом (например, отдел продаж хочет один тип поведения системы, отдел поддержки – другой) – Решение: провести совещание для согласования позиций: обсудить противоречивые требования со всеми сторонами и прийти к единому, не противоречивому решению.",
"Конфликт приоритетов требований – Два требования помечены как высокоприоритетные, но ресурсы позволяют полноценно реализовать лишь одно, либо выполнение одного блокирует другое по времени – Решение: пересмотреть приоритеты вместе с заказчиком: четко расставить их, при необходимости понизить приоритет одного требования или разбить реализацию на этапы.",
"Противоречие с ограничениями проекта – Требование предполагает затраты ресурсов или время, выходящие за рамки ограничений проекта (например, требует функцию, которая не укладывается в бюджет или сроки) – Решение: соотнести требование с ограничениями проекта: скорректировать объем или параметры требования под доступные ресурсы либо обосновать привлечение дополнительных ресурсов/времени.",
"Размытая формулировка требования – Требование описано слишком общими словами, без достаточной конкретики, поэтому разные читатели могут понимать его по-разному – Решение: переформулировать требование, добавив конкретные детали или измеримые критерии, чтобы устранить неоднозначность.",
"Неопределённые количественные показатели – В требовании используются неконкретные оценки типа “быстро”, “много”, “улучшить”, без точных значений – Решение: уточнить требование количественно, указав конкретные показатели (например, время отклика в миллисекундах, количество пользователей, проценты улучшения и т.д.).",
"Субъективная формулировка – Требование содержит оценочные слова (“удобный интерфейс”, “современный дизайн”), которые разные люди понимают по-своему – Решение: заменить субъективные критерии объективными: добавить измеримые метрики или четкие характеристики, либо описать примеры ожидаемого результата.",
"Неясный субъект действия – Требование сформулировано в пассивной форме или без указания исполнителя (“должно быть выполнено”), из-за чего непонятно, кто или что выполняет действие – Решение: переписать требование в активной форме, явно указав, какая роль или система выполняет действие.",
"Неоднозначное логическое условие – Условие в требовании сформулировано так, что его можно трактовать более чем одним способом (например, конструкция “если A и B или C” без скобок) – Решение: явно определить логику условия, при необходимости разбив требование на несколько однозначных утверждений.",
"Использование “и т.д.” в перечне – Требование перечисляет ряд элементов и заканчивается фразой “и т.п.” или “и др.”, оставляя неясным полный состав – Решение: либо перечислить все элементы полностью, либо указать критерий, по которому список может дополняться, чтобы читатель понимал границы перечня.",
"Недостаток контекста – Требование представлено без необходимого контекста или предпосылок, поэтому непонятно, когда и где оно применяется – Решение: добавить недостающий контекст или ссылку на сценарий использования; описать предпосылки и условия, при которых требование актуально.",
"Неконкретное указание времени/частоты – В требовании употреблены слова “периодически”, “часто”, “в реальном времени” без точного определения – Решение: уточнить временные характеристики: указать конкретную периодичность (например, “каждые N секунд”) или допустимую задержку в измеримых единицах.",
"Многозначный термин без определения – В требовании используется термин, имеющий несколько значений, без уточнения (например, слово “клиент” может означать и пользователя, и внешнюю систему) – Решение: дать определение этому термину в контексте проекта (в глоссарии или в тексте) либо заменить его более точным понятием.",
"Незаполненные поля (TBD) – В документе требования помечены как TBD (“to be determined”) или оставлены вопросы вместо конкретных значений – Решение: завершить проработку таких требований: получить недостающую информацию от экспертов и заменить пометки TBD конкретными данными.",
"Неопределённые границы требования – Неясно, где заканчивается действие или область, описанная в требовании (не указано, к какому модулю или компоненту системы оно относится) – Решение: явно описать границы применения требования (конкретный модуль, подсистема, вариант использования), чтобы исключить разночтения.",
"Использование слова “может” вместо “должен” – Требование сформулировано как возможность, а не обязательство системы (“система может делать X”), что неявно смягчает его – Решение: переформулировать в обязательной форме (“система должна делать X”), либо явно указать, что это условно-опциональная функциональность.",
"Перечисление без ясности полноты – Требование содержит список поддерживаемых элементов (форматов, действий и т.д.), но не ясно, является ли он исчерпывающим – Решение: уточнить формулировку: либо перечислить все допустимые элементы, либо добавить фразу, что список не исчерпывающий, с указанием критериев включения новых элементов.",
"Использование конструкции “и/или” – Формулировка требования с использованием “и/или” вводит неоднозначность, так как читатели могут по-разному понять сочетание условий – Решение: переписать требование, разделив случаи: явно описать варианты отдельно (например, двумя требованиями – одно с “и”, другое с “или”), либо перефразировать, чтобы исключить двусмысленность.",
"Неопределённые условные фразы – В тексте используются слова вроде “по возможности”, “желательно”, которые допускают разное понимание обязательности или условий выполнения – Решение: заменить размытые фразы конкретными условиями или указать степень обязательности явно (например, обозначить требование как обязательное или как пожелание с критериями выполнения).",
"Двойное отрицание – Требование сформулировано через двойное “не”, из-за чего трудно понять, что же должно быть сделано (например, “не допускать невыполнения задачи”) – Решение: переформулировать требование утвердительно, чтобы ясно описать необходимое поведение без двойных отрицаний.",
"Сложносоставное предложение – Требование выражено одним очень длинным предложением с множеством условий или частей, что затрудняет его понимание и может трактоваться по-разному – Решение: разбить такое требование на несколько отдельных или упростить формулировку, чтобы каждая часть читалась однозначно.",
"Неправильная пунктуация – Ошибка в знаках препинания (лишняя или пропущенная запятая и т.п.) меняет смысл требования или делает его неоднозначным – Решение: проверить и исправить пунктуацию; при сложностях лучше перестроить предложение, избежав двусмысленных пауз и оборотов.",
"Неясное использование “или” – В требовании используется союз “или” без уточнения, эксклюзивное это или включающее условие (можно ли выполнить оба варианта или только один) – Решение: уточнить формулировку: при эксклюзивном выборе использовать конструкцию “либо … либо”, либо явно указать, что варианты взаимоисключающие; если же могут применяться оба – описать условия для каждого случая.",
"Использование будущего времени – Требование написано как прогноз или обещание (“система будет делать X”), а не как четкое утверждение, из-за чего неясно, является ли это требованием или планом – Решение: переписать требование в настоящем времени или в обязательной форме (“система должна делать X”), чтобы задать однозначное требование.",
"Отрицательная формулировка – Требование сформулировано через запрет (“система не должна делать Y”) без описания допустимого поведения вместо Y, что оставляет пробелы в понимании – Решение: изложить требование в положительной форме: описать, что система должна делать (или как себя вести) вместо просто указания запрета.",
"Формулирование в виде вопроса – В тексте требований встречаются вопрос или пометка вида “решить, как будет X”, вместо утвердительного утверждения, из-за чего непонятно, принято ли решение – Решение: трансформировать вопрос/заметку в конкретное требование после обсуждения: требования должны быть изложены утвердительно, как факты.",
"Неправильное расположение уточняющих слов – Модификаторы типа “только”, “исключительно” поставлены неудачно и меняют смысл (например, разница между “только администратор может просматривать отчёты” и “администратор может просматривать только отчёты”) – Решение: отредактировать предложение, разместив уточняющие слова однозначно рядом с тем, что они ограничивают, либо разбить на два требования.",
"Грамматические ошибки и опечатки – Ошибки в грамматике или опечатки (например, пропущенное “не” или неправильное окончание) могут исказить смысл требования – Решение: тщательно вычитать документ и исправить языковые ошибки; при необходимости привлечь корректора или коллегу для проверки.",
"Непоследовательность стиля изложения – Требования написаны в разной манере (например, часть пунктов в форме тезисов, часть – развернутым текстом; разные уровни детализации вперемешку), что затрудняет их восприятие – Решение: привести документ к единому стилю и структуре, используя шаблоны и единообразные формулировки для всех требований.",
"Отсутствие критериев приемки – Для требования не определены условия или тесты, которые показывают, что оно выполнено – Решение: разработать явные критерии приемки: описать, как проверить выполнение требования (конкретные тестовые случаи, измеримые результаты или проверки).",
"Размытые критерии приемки – Критерии сформулированы нечетко, например “система достаточно удобна”, что не дает однозначного понимания успешного результата – Решение: сделать критерии приемки конкретными и измеримыми (например, “пользователь выполняет цельную операцию не более чем за 3 клика”, или метрика удовлетворенности из опроса).",
"Неполные критерии – Критерии приемки покрывают только часть функционала или только стандартный сценарий, не учитывая альтернативные пути и ошибки – Решение: добавить дополнительные критерии, охватывающие граничные случаи, исключительные ситуации и альтернативные сценарии, чтобы приемка была полноценной.",
"Непроверяемое требование – Формулировка требования такова, что ее невозможно объективно проверить (например, “улучшить имидж компании”) – Решение: переформулировать требование или разбить его на измеримые части, чтобы каждую можно было проверить тестированием или метриками; либо перенести подобные формулировки на уровень целей проекта, а не конкретных требований к системе.",
"Несоответствие критериев требованию – Указанные критерии приемки проверяют не то или не полностью то, что описано в самом требовании – Решение: сверить требования и критерии, устранить расхождения: критерии должны прямо проверять выполнение формулировки требования, при необходимости скорректировать одно из них.",
"Нет критериев для нефункциональных требований – Требования к производительности, безопасности, удобству и другим качествам не имеют определенных метрик приемки (например, нет теста на нагрузку для требования высокой производительности) – Решение: разработать критерии и тесты для нефункциональных требований (например, нагрузочное тестирование, проверка времени отклика, аудит безопасности) и включить их в документ.",
"Неуказан метод проверки – Критерий приемки описывает ожидаемый результат, но не уточняет условия или метод, как его проверять (например, приведено требование времени отклика, но не указано при какой нагрузке) – Решение: дополнить критерий деталями проверки: указать условия тестирования, инструменты или предположения (например, “при 1000 одновременных запросах время отклика ≤ 2 секунд”).",
"Требование записано как тест – В тексте требований встречаются фразы вроде “система должна пройти такое-то тестирование”, что скорее является задачей проверки, а не свойством системы – Решение: переписать требование, сфокусировавшись на самом свойстве системы (например, “система должна обеспечивать X при таких-то условиях”, вместо указания на тест); упоминание тестирования перенести в раздел критериев приемки или план тестов.",
"Смешение требования и критериев – Требование и его критерии приемки перепутаны или объединены в одной фразе, из-за чего неясно, где описание функционала, а где условие его приемки – Решение: разделить формулировки: описывать само требование отдельно, а критерии приемки выносить отдельным пунктом или разделом, чтобы не смешивать цель и способ проверки.",
"Критерии приемки не подтверждены – Критерии приемки не были согласованы с заказчиком или стейкхолдерами, поэтому представления о том, что считать выполненным, могут расходиться – Решение: согласовать сформулированные критерии приемки со всеми ответственными сторонами на этапе утверждения требований, чтобы у всех было единое понимание успешного результата.",
"Отсутствие ключевого функционального требования – В списке требований отсутствует важная функция или возможность, необходимая для полноценной работы системы – Решение: провести анализ предметной области и привлечь экспертов/пользователей для выявления всех ключевых функций; добавить пропущенное требование в документ.",
"Неучтённый пользовательский сценарий – Требования не покрывают некоторый сценарий использования или тип пользователя (например, не описано поведение для администратора, гостя или особой ситуации) – Решение: пересмотреть перечень сценариев и ролей; добавить требования для отсутствующих сценариев/ролей, чтобы система удовлетворяла потребности всех групп пользователей.",
"Неописанное поведение при ошибках – В требованиях описаны только нормальные случаи, но не указано, как система должна вести себя при ошибках, сбоях или нештатных ситуациях – Решение: включить требования обработки ошибок: описать, как система реагирует на неверные вводные данные, отказ компонентов, отсутствие связи и другие исключения.",
"Пропущенные нефункциональные требования – Документ требований не содержит положений о производительности, безопасности, надежности, масштабируемости или других важных качествах системы – Решение: добавить нефункциональные требования с конкретными метриками (время отклика, нагрузка, уровень доступности, требования по безопасности и пр.), чтобы учитывать важные характеристики системы.",
"Отсутствие требований по безопасности – В требованиях не отражены аспекты безопасности (например, аутентификация, шифрование, права доступа) – Решение: дополнить документ разделом безопасности: определить необходимые меры и механизмы безопасности, стандарты (например, шифрование данных, требования к паролям), чтобы защитить систему и данные пользователей.",
"Неопределённые границы системы – В требованиях не указано, какие функции выполняются самой системой, а какие остаются вне её (например, за пределами автоматизации), что приводит к пробелам – Решение: четко обозначить границы системы и контекст: перечислить, что входит в область ответственности системы, а что выполняется внешними средствами или вручную.",
"Отсутствие требований по данным – Не определены требования к данным: форматы входных/выходных данных, ожидаемые объемы, срок хранения, резервное копирование или миграция – Решение: добавить требования, описывающие работу с данными: указать формат данных, диапазоны значений, объемы и скорость роста данных, период хранения, необходимость резервирования и миграции.",
"Пропущенные требования интеграции – Система должна взаимодействовать с другими системами или оборудованием, но эти интеграционные моменты не описаны – Решение: включить интеграционные требования: описать внешние интерфейсы, протоколы и форматы обмена, требования совместимости с версиями сторонних систем или API.",
"Неописанные допущения и зависимости – Документ не содержит явного перечня предположений (например, что у пользователей есть определенные навыки или что используется конкретное оборудование) и внешних зависимостей (например, требование наличия стороннего сервиса) – Решение: явно задокументировать все предположения и внешние зависимости (необходимое окружение, сторонние системы, лицензии и т.д.), чтобы избежать скрытых ожиданий.",
"Отсутствие требований соответствия нормативам – Проект подпадает под законодательные или отраслевые стандарты, но в требованиях не указано, каким нормативам должна соответствовать система (например, GDPR, ГОСТ) – Решение: добавить требования по соответствию: перечислить применимые стандарты и нормативы, которым должна удовлетворять система, и описать, как это соответствие будет достигнуто или проверяться.",
"Требование вне рамок проекта – В спецификацию включено требование на функциональность, которая не входит в согласованный объем проекта – Решение: исключить или перенести такое требование в будущие версии: придерживаться утвержденной границы проекта, а дополнительные функции зафиксировать как потенциальные улучшения на будущее.",
"Дублирование требований (без необходимости) – В документе одно и то же требование или информация повторяются несколько раз, раздувая документ и создавая риск рассинхронизации при правках – Решение: удалить избыточные дубли или объединить повторяющиеся пункты, оставив единое описание, чтобы документ был компактнее и противоречий не возникало.",
"Избыточная функциональность (“золотые украшения”) – В требования включены функции, не продиктованные реальными потребностями, а добавленные “на всякий случай” или из предположения о желательности – Решение: избегать добавления неподтвержденных функций: включать в документ только те требования, которые согласованы с заказчиком и несут ценность; лишний функционал выносить в список идей.",
"Перегрузка деталями реализации – Требование содержит подробности внутренней реализации или дизайна (например, описание алгоритма или структуры базы данных), которые не нужны на уровне требований – Решение: упростить требование до описания необходимого результата или поведения, а детали реализации оставить для этапа проектирования и разработки.",
"Навязывание конкретного технического решения – В тексте требований напрямую предписано использовать определенную технологию, инструмент или метод реализации (например, конкретную СУБД или язык программирования) без объективной необходимости – Решение: сфокусировать требование на результате или ограничении (например, объем данных, скорость обработки), предоставив команде свободу выбора подходящего решения, если только конкретная технология не является обоснованно обязательной.",
"Чрезмерные подробности интерфейса – Требование описывает внешний интерфейс до мелких деталей (расположение элементов, цвета), хотя такие решения обычно принимаются на стадии дизайна – Решение: оставить в требованиях лишь ключевые моменты UI/UX, влияющие на функциональность (например, поддержка доступности для пользователей с ОВЗ), а детали оформления доверить дизайнерам в рамках указанных гайдлайнов.",
"Лишняя справочная информация – В тексте требований содержатся объемные пояснения, исторические справки или обсуждения, не влияющие на сами обязательные условия – Решение: вынести несущественную для формулировки требования информацию в примечания или приложение, либо удалить ее, оставив в основной части только конкретные требования.",
"Устаревшее требование – В документе осталось требование или описание, актуальное для прежней версии системы или старого решения, которое больше не применяется – Решение: актуализировать документ: удалить или пометить как удаленное устаревшее требование, чтобы оно не вызывало путаницы и не учитывалось командой.",
"Смешивание требований разного уровня – В одном разделе перемешаны высокоуровневые бизнес-требования и низкоуровневые системные детали, из-за чего некоторые требования дублируют друг друга или неполно раскрыты – Решение: структурировать документ по уровням (например, отдельно бизнес-требования, отдельно системные/технические) и перенести каждое требование в соответствующий раздел, добившись ясности и отсутствие дублей.",
"Излишние ограничения без обоснования – Требование накладывает ограничение, не продиктованное реальной необходимостью (например, жестко лимитирует использование ресурсов без явной причины) – Решение: проверить обоснованность каждого ограничения; убрать или смягчить те, которые не имеют четкой цели, чтобы не усложнять разработку неоправданными рамками.",
"Некорректное использование термина – В требованиях технический термин применен неверно (например, путаются понятия “аутентификация” vs “авторизация”), что может ввести команду в заблуждение – Решение: исправить терминологию: использовать термины согласно их общепринятому значению или дать пояснение в тексте, чтобы исключить неправильное понимание.",
"Несогласованная терминология – Одни и те же сущности называются по-разному в разных требованиях (например, в одном месте “клиент”, в другом “покупатель” при обозначении одного и того же) – Решение: выработать единый словарь и придерживаться его: заменить разнородные обозначения на единообразные и внести все ключевые понятия в глоссарий документа.",
"Неопределенные аббревиатуры – В тексте используются сокращения или аббревиатуры (АК, СУБД, API) без расшифровки, что усложняет понимание для читателей – Решение: при первом использовании каждой аббревиатуры давать ее полное название в скобках, либо включить список всех сокращений и их расшифровок в глоссарий.",
"Несогласованность единиц и форматов – Требование содержит числовые значения без указания единиц измерения или разные требования используют разные форматные стандарты (например, где-то размеры в дюймах, а где-то в сантиметрах) – Решение: прописать единицы измерения для всех количественных показателей и придерживаться единого стандарта форматов (дат, времени, валют и т.д.) во всех требованиях.",
"Ссылка на устаревший стандарт – Требование ссылается на стандарт или нормативный документ, который утратил актуальность, либо ошибочно указан не тот номер/версия стандарта – Решение: проверить все внешние ссылки и стандарты; обновить их до актуальных версий или корректных номеров, чтобы требования соответствовали действующим нормам.",
"Использование узкоспециального жаргона – В требованиях применяются внутренние жаргонные названия систем, проектов или модулей, непонятные внешним участникам – Решение: заменить жаргонные термины нейтральными общеупотребительными названиями или включить их объяснение в документ, чтобы требования были однозначны для всех читателей.",
"Неявный особый смысл слова – Обычное слово используется в узком специфическом значении без пояснения (например, термин “модуль” может значить конкретный компонент системы) – Решение: четко определить особый термин: либо дать его определение в тексте/глоссарии, либо подобрать более специфическое слово, отражающее требуемый смысл.",
"Отсутствие глоссария – В документе требований нет раздела с определениями, поэтому значение многих терминов и сокращений остается на усмотрение читателя – Решение: добавить глоссарий, перечислив в нем все ключевые термины и аббревиатуры с их точными определениями в контексте проекта.",
"Несоблюдение шаблона требований – Формулировки не соответствуют принятому стандарту или шаблону требований (например, не используется слово “должен” для обязательных требований, отсутствует идентификатор), что может приводить к разночтениям – Решение: привести требования к стандартному виду согласно корпоративным или отраслевым рекомендациям (например, стандарт IEEE) и следовать единообразному шаблону во всем документе.",
"Смешение языков и нотаций – В документе одновременно используются разные языки или нотации описания (часть требований на русском, часть на английском; смешение текстового описания и разных нотаций UML без пояснений), что может вызвать ошибки понимания – Решение: унифицировать язык документа и обозначения: использовать один язык для текста требований и согласованный набор нотаций для моделей, снабжая диаграммы необходимыми комментариями.",
"Отсутствие процесса управления изменениями – В проекте не определено, как вносить и утверждать изменения в требования, поэтому любые правки происходят хаотично – Решение: внедрить формальный процесс управления изменениями: назначить ответственных за требования, установить процедуру предложения изменений, их анализа и утверждения соответствующей комиссией или ответственным лицом.",
"Неконтролируемое расширение объема (scope creep) – В проект постоянно добавляются новые требования или функции без должной оценки влияния на сроки и ресурсы, что ведет к задержкам и перерасходу – Решение: ввести жесткий контроль объема проекта: пропускать новые запросы через процесс изменения требований, оценивать их критичность, трудозатраты и либо включать с пересмотром плана, либо откладывать на будущие этапы.",
"Отсутствие фиксации версий документа – Требования изменяются со временем, но не ведется версия документа или журнал изменений, поэтому непонятно, какая версия актуальна и что поменялось – Решение: использовать версионирование требований: присваивать документу версию при каждом существенном обновлении, вести историю изменений (changelog) с указанием даты, автора и сути изменений.",
"Недокументированные изменения – Внесенные изменения требований не отражены в официальной документации (обновления хранятся лишь в чьих-то заметках или памяти) – Решение: все изменения требований фиксировать письменно: сразу вносить правки в документ требований или протоколировать их в журнале изменений, чтобы документация всегда была актуальной.",
"Изменения без уведомления команды – Требование изменилось, но это не доведено до сведения всех членов команды (разработчиков, тестировщиков, менеджера), вследствие чего часть команды продолжает работать по старой версии – Решение: наладить коммуникацию изменений: при каждом обновлении требований оповещать команду (рассылка, встречи, обновление статусов в системе), чтобы все работали с последней версией.",
"Внесение изменений без согласования – Требования меняются кем-то единолично (например, разработчиком или менеджером) без одобрения заказчика или заинтересованных сторон, что может привести к несоответствию ожиданиям – Решение: соблюдать процедуру согласования: любые изменения утверждать с владельцем продукта/заказчиком и другими стейкхолдерами, чтобы все были согласны с новой версией требования.",
"Отсутствие анализа влияния изменений – При изменении требования не анализируется его влияние на другие требования и части системы, из-за чего правка в одном месте может незаметно нарушить работу в другом – Решение: проводить анализ воздействия: использовать прослеживаемость (traceability) требований, чтобы увидеть, на какие модули, бизнес-процессы и тест-кейсы повлияет изменение, и скорректировать их по необходимости.",
"Необновление связанных артефактов – Требование изменили, но связанные артефакты (дизайн-документы, схемы, тестовые сценарии, руководство пользователя) не обновили, и они противоречат новым требованиям – Решение: при изменении требования синхронно обновлять все затронутые документы; назначить ответственных за актуализацию сопутствующих материалов и проверять консистентность на ревью.",
"Поздние изменения без пересмотра планов – Существенные изменения требований вносятся на поздних стадиях проекта, но сроки и ресурсы не пересчитываются, что приводит к перегрузке команды и риску срыва сроков – Решение: принимать поздние изменения только после пересмотра планов: обновить расписание, перераспределить ресурсы либо официально перенести часть функций на следующую итерацию/версии.",
"Изменения после заморозки требований – Даже после формального утверждения и “заморозки” требований продолжают вноситься изменения, нарушая стабильность разработki – Решение: установить жесткие правила после заморозки: разрешать только критические изменения с высоким приоритетом и обязательным прохождением процесса утверждения; иные запросы фиксировать для будущих версий.",
"Постоянная смена приоритетов – Приоритеты требований или функций пересматриваются слишком часто, из-за чего команда не успевает завершить начатое, планы постоянно меняются – Решение: зафиксировать приоритеты хотя бы на текущий этап/спринт и менять их только при острой необходимости; если приоритет меняется, оформлять это как изменение требований с пониманием последствий для сроков.",
"Параллельное изменение требований – Несколько человек редактируют требования одновременно в разных копиях или ветках, что приводит к конфликтующим версиям и потере правок – Решение: вести единый источник требований (единый документ или систему); разграничить права редактирования или интегрировать правки через ответственного, чтобы избежать конфликта версий.",
"Неучастие нужных специалистов при изменениях – Изменения требований вносятся без участия или консультации специалистов, которых они касаются (например, не привлечен эксперт по безопасности при изменении функционала доступа) – Решение: при рассмотрении изменения привлекать всех релевантных стейкхолдеров и экспертов (безопасность, правовые, эксплуатация и т.д.), чтобы учесть их требования и избежать проблем после реализации.",
"Неинформирование внешних стейкхолдеров – Изменения в требованиях, влияющие на ожидаемый результат для пользователей или заказчиков, не доводятся до них (например, исключена обещанная ранее функция, но клиент об этом не уведомлен) – Решение: обеспечивать прозрачность вовне: при значимых изменениях обновлять спецификации, договорные приложения, информировать заказчика или пользователей (через релизные заметки, рассылки), чтобы управлять ожиданиями.",
"Неподходящие инструменты отслеживания – Управление требованиями ведется неформально (в электронных письмах, таблицах, устных обсуждениях), отсутствует централизованный инструмент, что затрудняет отслеживание изменений и актуальной версии – Решение: внедрить систему управления требованиями или хотя бы централизованный реестр (например, Confluence, Jira, специализированное ПО) с возможностью версионирования и ведения истории изменений, чтобы все участники имели доступ к актуальным требованиям."
]

docs = [Document(page_content=text) for text in big_texts]


class Rag:
    def __init__(self, top_k=3):
        self.embeddings = GigaChatEmbeddings(one_by_one_mode=True,
                                             credentials=credentials, 
                                             verify_ssl_certs=False)
        self.doc_store = Qdrant.from_documents(
            docs,
            self.embeddings,
            location=":memory:",
            collection_name="docs",
        )
        self.rag = self.doc_store.as_retriever(search_kwargs={'k': top_k})

    def get_data(self, text) -> str:
        response = self.rag.invoke(text)
        promt = "\nДанные для справки, они получены из RAG:\n\n"
        data = '\n\n'.join([i.page_content for i in response])
        return promt + data + '\n\n'
